{"ast":null,"code":"var _jsxFileName = \"D:\\\\notes-app\\\\notes-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\");\n        const notes = await response.json();\n        setNotes(notes);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleAddNote = event => {\n    event.preventDefault();\n    // This is deleted in the video at time 16:37.\n    const handleAddNote = async event => {\n      event.preventDefault();\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title,\n            content\n          })\n        });\n        const newNote = await response.json();\n        setNotes([newNote, ...notes]);\n        setTitle(\"\");\n        setContent(\"\");\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  };\n  const handleUpdateNote = async event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/notes/${selectedNote.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const updatedNote = await response.json();\n      const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const deleteNote = async (event, noteId) => {\n    event.stopPropagation();\n    try {\n      await fetch(`http://localhost:5000/api/notes/${noteId}`, {\n        method: \"DELETE\"\n      });\n      const updatedNotes = notes.filter(note => note.id !== noteId);\n      setNotes(updatedNotes);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: [notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => deleteNote(event, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Note Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Note Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VB1fkClPu3jlvzuJZF8O8L7W3ug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","fetchNotes","response","fetch","json","e","console","log","handleNoteClick","note","handleAddNote","event","preventDefault","method","headers","body","JSON","stringify","newNote","handleUpdateNote","id","updatedNote","updatedNotesList","map","deleteNote","noteId","stopPropagation","updatedNotes","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","handleCancel","_c","$RefreshReg$"],"sources":["D:/notes-app/notes-app/src/App.tsx"],"sourcesContent":["import \"./App.css\";\n\nimport React, { useState, useEffect } from 'react';\n\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\");\n\n        const notes: Note[] = await response.json();\n\n        setNotes(notes);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchNotes();\n  }, []);\n\n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  const handleAddNote = (event: React.FormEvent) => {\n    event.preventDefault();\n   // This is deleted in the video at time 16:37.\n   const handleAddNote = async (\n    event: React.FormEvent\n  ) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\n        \"http://localhost:5000/api/notes\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            title,\n            content,\n          }),\n        }\n      );\n\n      const newNote = await response.json();\n\n      setNotes([newNote, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  };\n\n  const handleUpdateNote = async (\n    event: React.FormEvent\n  ) => {\n    event.preventDefault();\n\n    if (!selectedNote) {\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://localhost:5000/api/notes/${selectedNote.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            title,\n            content,\n          }),\n        }\n      );\n\n      const updatedNote = await response.json();\n\n      const updatedNotesList = notes.map((note) =>\n        note.id === selectedNote.id\n          ? updatedNote\n          : note\n      );\n\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n\n\n\n  const deleteNote = async (\n    event: React.MouseEvent,\n    noteId: number\n  ) => {\n    event.stopPropagation();\n\n    try {\n      await fetch(\n        `http://localhost:5000/api/notes/${noteId}`,\n        {\n          method: \"DELETE\",\n        }\n      );\n      const updatedNotes = notes.filter(\n        (note) => note.id !== noteId\n      );\n\n      setNotes(updatedNotes);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n    \n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\" onSubmit={(event)=> handleAddNote(event)}>\n      <input\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n        placeholder=\"Title\"\n        required\n      ></input>\n\n      <textarea\n        value={content}\n        onChange={(event) => setContent(event.target.value)}\n        placeholder=\"Content\"\n        rows={10}\n        required\n      ></textarea>\n\n      {selectedNote ? (\n        <div className=\"edit-buttons\">\n        <button type=\"submit\">Save</button>\n        <button onClick={handleCancel}>Cancel</button>\n        </div>\n      ) : (\n        <button type=\"submit\">Add Note</button>\n      )}\n      </form>\n      \n      <div className=\"notes-grid\">\n  {notes.map((note) => (\n    <div className=\"note-item\" onClick={() => handleNoteClick(note)}>\n      <div className=\"notes-header\">\n        <button onClick={(event) => deleteNote(event, note.id)}>x</button>\n      </div>\n      <h2>{note.title}</h2>\n      <p>{note.content}</p>\n    </div>\n  ))}\n\n        <div className=\"note-item\">\n          <div className=\"notes-header\">\n            <button>X</button>\n          </div>\n          <h2>Note Title</h2>\n          <p>Note Content</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}